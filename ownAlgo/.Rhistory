fin %>%
as_tbl_time(time) %>%
filter_time("2017-03-02 12:22:00" ~ "2017-03-02 13:05:00") %>%
summarise(count = n(),
hz = count/duration)
ts<- objLog %>% arrange(time) %>%
mutate( nextStop = lead(Location),
nextType = lead(Type),
nextTime = lead(time)) %>%
filter( (Location == "Utrecht Centraal" & nextStop == "Amsterdam Centraal")|
(Location == "Amsterdam Centraal" & nextStop == "Utrecht Centraal")
) %>%
mutate(duration = nextTime - time) %>%
filter(Type == "Check-in") %>%
select(time,nextTime, duration)
getSampFreq <- function(time,nextTime){
duration <- as.numeric(nextTime)-as.numeric(time)
fin %>%
filter(timestampMs >= as.numeric(time) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration) %>% pull()->sampFreq
return(sampFreq)
}
ts<- objLog %>% arrange(time) %>%
mutate( nextStop = lead(Location),
nextType = lead(Type),
nextTime = lead(time)) %>%
filter( (Location == "Utrecht Centraal" & nextStop == "Amsterdam Centraal")|
(Location == "Amsterdam Centraal" & nextStop == "Utrecht Centraal")
) %>%
mutate(duration = nextTime - time) %>%
filter(Type == "Check-in") %>%
select(time,nextTime)
ts
ts[1,1]
ts[1,1][[]]
ts[1,1][[1]]
getSampFreq(ts[1,1][[1]],ts[1,2][[1]])
time <- ts[1,1][[1]]
time
nextTime <- ts[1,2][[1]]
nextTime
duration <- as.numeric(nextTime)-as.numeric(time)
duration
duration/60
fin %>%
filter(timestampMs >= as.numeric(time) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration) %>% pull(hz)->sampFreq
getSampFreq(ts[1,1][[1]],ts[1,2][[1]])
duration <- as.numeric(nextTime)-as.numeric(time)
fin %>%
filter(timestampMs >= as.numeric(time) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration) %>% pull(hz)->sampFreq
sampFreq
fin %>%
filter(timestampMs >= as.numeric(time) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration)
timeInput <- ts[1,1][[1]]
nextTime <- ts[1,2][[1]]
duration <- as.numeric(nextTime)-as.numeric(timeInput)
fin %>%
filter(timestampMs >= as.numeric(timeInput) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration)
getSampFreq <- function(timeInput,nextTime){
duration <- as.numeric(nextTime)-as.numeric(timeInput)
fin %>%
filter(timestampMs >= as.numeric(timeInput) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration) %>% pull(hz)->sampFreq
return(sampFreq)
}
getSampFreq(ts[1,1][[1]],ts[1,2][[1]])
hzs<- vector()
hzs[1]
hzs[1] <- 1
hzs
hzs[3] <- 1
hzs
hzs<- vector()
hzs<- vector()
for( i in 1:nrow(ts)){
hzs[i]<- getSampFreq(ts[i,1][[1]],ts[i,2][[1]])
}
mean(hzs)
60*30
24*30
24*30*.12
duration
duration/60
fin %>%
filter(timestampMs >= as.numeric(timeInput) & timestampMs <= as.numeric(nextTime)) %>%
summarise(count = n(),
hz = count/duration)
hzs
summary(hzs)
hist(hzs)
cor(fin$accuracy,fin$distClustMin)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data<- readRDS("/Users/boazsobrado/Desktop/Academic/Utrecht/year2/thesisFiles/data/boaz/myLocationHistory09012018.rds")
home<- c(5.113919,52.10421)
# filter to measurements within 300 km from home in Utrecht
test <- data %>% mutate( distanceHome = raster::pointDistance(matrix(c(lon,lat),ncol = 2),
home,
longlat = T),
timestampMs = as.numeric(time))%>%
filter(distanceHome < 200000) %>%
select(time,lon,lat,accuracy, timestampMs,distanceHome) %>%
arrange(timestampMs)
rm(data)
test2 <- clusterFunc(data = test,
timeLim = 300,
distLim = 50,
minPause = 100,
accuracyLim = 250)
# Extract the pause locations
toClust <- test2 %>% filter( isPause == 1  & !(distMeanEast > 2*meanAcc |
distMeanWest >2*meanAcc |
distMeanNorth >2*meanAcc |
distMeanSouth >2*meanAcc)) %>%
select(meanLon,meanLat) %>% as.matrix()
colnames(toClust) <- c("lon","lat")
# merge all clusters within 300 meters of each other
#clusterMap <- mergePoints(toClust, d = 300)
clusterMap1 <- mergePoints(toClust, d = 150)
clusterMap1 <- mergePoints(toClust, d = 450)
clusterMap2 <- mergePoints(toClust, d = 450)
# show clustering parameter effect
leaflet() %>%
addTiles() %>%
addCircles( data = clusterMap1, lng = ~lon, lat = ~lat)
# show clustering parameter effect
leaflet() %>%
addTiles() %>%
addCircles( data = clusterMap1, lng = ~lon, lat = ~lat, color = "#18206F") %>%
addCircles( data = clusterMap2, lng = ~lon, lat = ~lat, color = "#DF2935")
nrow(clusterMap1)
nrow(clusterMap2)
clusterMap1 <- mergePoints(toClust, d = 150)
clusterMap2 <- mergePoints(toClust, d = 450)
# show clustering parameter effect
leaflet() %>%
addTiles() %>%
addCircles( data = clusterMap1, lng = ~lon, lat = ~lat, color = "#18206F") %>%
addCircles( data = clusterMap2, lng = ~lon, lat = ~lat, color = "#DF2935")
# show clustering parameter effect
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles( data = clusterMap1, lng = ~lon, lat = ~lat, color = "#18206F") %>%
addCircles( data = clusterMap2, lng = ~lon, lat = ~lat, color = "#DF2935")
# show clustering parameter effect
leaflet(options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles( data = clusterMap1, lng = ~lon, lat = ~lat, color = "#18206F") %>%
addCircles( data = clusterMap2, lng = ~lon, lat = ~lat, color = "#DF2935")
model
model %>% predict_proba(as.matrix(x_test))
probs
probs <- model %>% predict_proba(as.matrix(x_test))
certainty<- apply(X = probs[,-1],MARGIN = 1,max)
summary(certainty)
wordcountaddin:::text_stats()
fin %>%
select(time,accuracy) %>%
as_tbl_time(index = time) %>%
time_filter(2000-01 ~ 2017-06) %>%
thicken('5 min') %>%
group_by(time_5_min) %>%
summarise(measurements = n(),
accuracy = mean(accuracy)) %>%
pad() %>%
fill_by_value(value = 0)%>%
mutate(
hour = as.POSIXct(
paste0("2014-01-22 ",
strftime(time_5_min,format = "%H:%M", tz = "Europe/Budapest"))),
time2 = lubridate::force_tz(time_5_min, "Asia/Singapore"),
missing = case_when(
measurements== 0 ~ 1,
measurements > 0 ~ 0)
)
fin %>%
select(time,accuracy) %>%
as_tbl_time(index = time) %>%
filter_time(2000-01 ~ 2017-06) %>%
thicken('5 min') %>%
group_by(time_5_min) %>%
summarise(measurements = n(),
accuracy = mean(accuracy)) %>%
pad() %>%
fill_by_value(value = 0)%>%
mutate(
hour = as.POSIXct(
paste0("2014-01-22 ",
strftime(time_5_min,format = "%H:%M", tz = "Europe/Budapest"))),
time2 = lubridate::force_tz(time_5_min, "Asia/Singapore"),
missing = case_when(
measurements== 0 ~ 1,
measurements > 0 ~ 0)
)
fin %>%
select(time,accuracy) %>%
as_tbl_time(index = time) %>%
filter_time("2000-01" ~ "2017-06") %>%
thicken('5 min') %>%
group_by(time_5_min) %>%
summarise(measurements = n(),
accuracy = mean(accuracy)) %>%
pad() %>%
fill_by_value(value = 0)%>%
mutate(
hour = as.POSIXct(
paste0("2014-01-22 ",
strftime(time_5_min,format = "%H:%M", tz = "Europe/Budapest"))),
time2 = lubridate::force_tz(time_5_min, "Asia/Singapore"),
missing = case_when(
measurements== 0 ~ 1,
measurements > 0 ~ 0)
)
# by 5 minute version 2
m5minv2<- fin %>%
select(time,accuracy) %>%
as_tbl_time(index = time) %>%
filter_time("2000-01" ~ "2017-06") %>%
thicken('5 min') %>%
group_by(time_5_min) %>%
summarise(measurements = n(),
accuracy = mean(accuracy)) %>%
pad() %>%
fill_by_value(value = 0)%>%
mutate(
hour = as.POSIXct(
paste0("2014-01-22 ",
strftime(time_5_min,format = "%H:%M", tz = "Europe/Budapest"))),
time2 = lubridate::force_tz(time_5_min, "Asia/Singapore"),
missing = case_when(
measurements== 0 ~ 1,
measurements > 0 ~ 0)
)
m5minv2 %>%
as_tbl_time(index = time2)%>%
time_filter(2017-02-15 ~ 2017-02-15) %>%
ggplot( aes(x = hour, y=measurements, colour = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Asia/Singapore"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time(2017-02-15 ~ 2017-02-15) %>%
ggplot( aes(x = hour, y=measurements, colour = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Asia/Singapore"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements, colour = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Asia/Singapore"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements, colour = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements, group = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements, shape = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements, shape = factor(missing),colour = factor(missing)))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
scale_colour_manual(values=c("black",muted("red")),labels=c("Not Missing", "Missing"))+
labs(x = NULL, colour = "")+xlab("Time")
exampleMiss<- m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M:%S", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")
exampleMiss<- m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_discrete()
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_discrete()
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continous()
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continuous()
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continuous(breaks = seq(0, 10, by = 1), name = "Measurements")
m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continuous(breaks = seq(0, 9, by = 2), name = "Measurements")
exampleMiss<- m5minv2 %>%
as_tbl_time(index = time2)%>%
filter_time("2017-02-15" ~ "2017-02-15") %>%
ggplot( aes(x = hour, y=measurements))+
geom_point()+theme_tufte()+
xlab("")+
ylab("Measurements")+
ggtitle("Measurements per 5 minute window",subtitle = "February 15 2017")+
scale_x_datetime(breaks = date_breaks("4 hour"),
minor_breaks=date_breaks("2 hour"),
labels=date_format("%H:%M", tz = "Europe/Budapest"))+
labs(x = NULL, colour = "")+xlab("Time")+
scale_y_continuous(breaks = seq(0, 9, by = 2), name = "Measurements")
dir()
ggsave(exampleMiss,filename = "../img/missingBoaz5minExample.png",device = "png",height = 10, width = 20, units = "cm")
ggsave(exampleMiss,filename = "../img/missin5minExample2018.png",device = "png",height = 10, width = 20, units = "cm")
dir("..")
dir("../manuscript")
ggsave(exampleMiss,filename = "../manuscript/img/missin5minExample2018.png",device = "png",height = 10, width = 20, units = "cm")
devtools::install_github("crsh/papaja")
library(papaja)
?apa_table
my_table <- t(apply(cars, 2, function(x) # Create data
round(c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x)), 2)
))
apa_table(
cbind(my_table, my_table)
, align = c("l", rep("r", 8))
, caption = "A summary table of the cars dataset."
, note = "This table was created using apa\\_table()"
, added_stub_head = "Variables"
, col_spanners = list(`Cars 1` = c(2, 5), `Cars 2` = c(6, 9))
)
apa_table(resultsDf, col_spanners = list(`Five minutes` = c(2, 3), `One Hour` = c(4, 5),`One Day` = c(6,7)))
printnum(100)
printnum(100, digits = 1)
printnum(100, digits = 0)
r_refs(file = "r-references.bib")
r_refs()
my_citations <- cite_r(file = "r-references.bib")
my_citations
?r_refs()
getwd()
dit()
dir()
dir(../)
dir("../")
dir("../"manuscript)
dir("../manuscript")
r_refs(file = "../manuscript/r-references.bib")
my_citations
my_citations
