# Distance clustering

#load required packages
library(dplyr)

#read the data in
data<- readRDS("/Users/boazsobrado/Desktop/Academic/Utrecht/year2/thesisFiles/data/boaz/myLocationHistory09012018.rds")

home<- c(5.113919,52.10421)
#extract measurements within 300 km from home in Utrecht
test <- data %>% mutate( distanceHome = raster::pointDistance(matrix(c(lon,lat),ncol = 2),
                                                              home,
                                                              longlat = T),
                         timestampMs = as.numeric(time))%>%
  filter(distanceHome < 300000) %>% 
  select(time,lon,lat,accuracy, timestampMs,distanceHome) %>%
  arrange(timestampMs)

rm(data)

# analyse time spent in one area

test2 <- clusterFunc(data = test,
                     timeLim = 600,
                     distLim = 100,
                     minPause = 60,
                     accuracyLim = 50)

# missing group and name

toClust <- test2 %>% filter( isPause == 1 & duration > 600) %>%
  select(lon,lat) %>% as.matrix()
  
library(sp)
library(rgdal)
library(geosphere)

# convert data to a SpatialPointsDataFrame object
xy <- SpatialPointsDataFrame(
  toClust, data.frame(ID=seq(1:nrow(toClust))),
  proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))

rm(toClust)
# use the distm function to generate a geodesic distance matrix in meters
mdist <- distm(xy)

# cluster all points using a hierarchical clustering approach
hc <- hclust(as.dist(mdist), method="complete")

# define the distance threshold, in this case 50 m
d=200

# define clusters based on a tree "height" cutoff "d" and add them to the SpDataFrame
xy$clust <- cutree(hc, h=d)

xy <- cbind(xy@data,xy@coords)

xy %>% as.data.frame() %>% 
  group_by(clust) %>% 
  summarise(lon = mean(lon),
            lat = mean(lat),
            n   = n()) %>% 
  leaflet() %>% 
  addTiles() %>%
  addCircles(lng = ~lon, lat = ~lat,
             radius = 50, fillOpacity = 0.02,color = "#18206F",label = ~as.character(n))

# save
saveRDS(test2,"clusters.rds")
rm(mdist)

test2 %>% filter( isPause == 1 & duration > 6000) %>% 
  leaflet() %>% 
  addTiles() %>%
  addCircles(lng = ~lon, lat = ~lat,
             radius = 30, fillOpacity = 0.02,color = "#18206F",label = ~as.character(duration))
